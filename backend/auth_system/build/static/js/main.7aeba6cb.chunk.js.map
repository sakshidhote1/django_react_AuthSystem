{"version":3,"sources":["containers/Home.js","actions/type.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["Home","props","className","to","role","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOGOUT","loas_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","signup","re_password","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","return","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","id","href","checkAuthenticated","code","useEffect","children","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aeba6cb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = (props) => (\r\n    <div className='container'>\r\n        <div className=\"jumbotron mt-5\">\r\n            <h1 className=\"display-4\">Welcome to Auth System!</h1>\r\n            <p className=\"lead\">This is an incredible authentication system with production level features!</p>\r\n            <hr className=\"my-4\" />\r\n            <p>Click the log In button</p>\r\n            <Link className=\"btn btn-primary btn-lg\" to='/login' role=\"button\">Login</Link>\r\n            \r\n            \r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Home;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS =  'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS =  'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS ,\r\n    LOGIN_FAIL ,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS ,\r\n    USER_LOADED_FAIL ,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    LOGOUT\r\n} from './type';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Accept':'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({token: localStorage.getItem('access')});\r\n\r\n        try{\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,body,config);\r\n            if (res.data.code != 'token_not_valid'){\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n\r\n        }catch(err){\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n    \r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport const loas_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':`JWT ${localStorage.getItem('access')}`,\r\n                'Accept':'application/json'\r\n            }\r\n        };\r\n        try{\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`,config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload:res.data\r\n            });\r\n        }catch(err){\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n    \r\n        }\r\n    }else{\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`,body,config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload:res.data\r\n        });\r\n\r\n        dispatch(loas_user());\r\n    }catch(err){\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`,body,config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload:res.data\r\n        });\r\n    }catch(err){\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const verify = (uid, token )=> async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`,body,config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS\r\n        });\r\n    }catch(err){\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    };\r\n    const body = JSON.stringify({ email });\r\n\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,body,config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS,\r\n        });\r\n       \r\n    }catch(err){\r\n      \r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL,\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    };\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try{\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,body,config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS ,\r\n        });\r\n       \r\n    }catch(err){\r\n      \r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch ({\r\n        type: LOGOUT\r\n    });\r\n};\r\n\r\n","import React ,{ useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst Login = ({ login,isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control mt-3'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-3'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forget your Password? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,{ login })(Login);","import React ,{ useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from \"../actions/auth\";\r\n\r\nconst Signup = ({ signup,isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        re_password:''\r\n    });\r\n\r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (password === re_password) {\r\n            signup(name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n        \r\n    };\r\n\r\n    if (isAuthenticated){\r\n        return <Redirect to='/' />\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                    <input\r\n                        className='form-control mt-3'\r\n                        type='text'\r\n                        placeholder='Name*'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control mt-3'\r\n                        type='email'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-3'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-3'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password*'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,{ signup })(Signup);","import React ,{ useState } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from \"../actions/auth\";\r\n\r\nconst Activate = ({ verify, match }) => {\r\n\r\n    const [verified, setVerified] = useState(false)\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div \r\n                className= 'd-flex flex-column justify-content-center align-items-center' \r\n                style ={{ marginTop: \"200px\"}}\r\n            >\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop:\"50px\"}}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default connect(null,{ verify })(Activate);","import React ,{ useState } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from \"../actions/auth\";\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset:</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control mt-3'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default connect(null,{ reset_password })(ResetPassword);","import React ,{ useState } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        new_password:'',\r\n        re_new_password:''\r\n    });\r\n\r\n    const { new_password , re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n\r\n        reset_password_confirm(uid,token,new_password,re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group mt-3'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group mt-3'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default connect(null,{ reset_password_confirm })(ResetPasswordConfirm);","import {\r\n    LOGIN_SUCCESS ,\r\n    LOGIN_FAIL ,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS ,\r\n    USER_LOADED_FAIL ,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    LOGOUT\r\n} from '../actions/type';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState,action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAuthenticated:true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access',payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                access:payload.access,\r\n                refresh:payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user:payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return{\r\n                ...state,\r\n                isAuthenticated:false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return{\r\n                ...state,\r\n                user:null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access:null,\r\n                return:null,\r\n                isAuthenticated:null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React , { Fragment } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst Navbar = ({ logout , isAuthenticated }) => {\r\n    const guestLink = () => (\r\n        <Fragment>\r\n             <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLink = () => (\r\n        <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#!\" onClick= {logout}>Logout</a>\r\n        </li>\r\n    );\r\n\r\n    // const logoutHaandler = () => {\r\n    //     logout();\r\n    // };\r\n\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Auth System</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        {isAuthenticated ? authLink() : guestLink()}\r\n                       \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n    \r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, { useEffect } from \"react\";\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated,loas_user} from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.loas_user();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n        <Navbar />\r\n        {props.children}\r\n    </div>\r\n\r\n    ) \r\n\r\n};\r\n\r\nexport default connect(null,{ checkAuthenticated,loas_user}) (Layout);","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login';\r\nimport Signup from './containers/Signup';\r\nimport Activate from './containers/Activate';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport Layout from './hocs/Layout';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route exact path='/login' component={Login} />\r\n                    <Route exact path='/signup' component={Signup} />\r\n                    <Route exact path='/reset-password' component={ResetPassword} />\r\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\r\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n    \r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}